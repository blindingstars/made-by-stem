# Provides default value for input field.
directive @default(value: JSON!) on INPUT_FIELD_DEFINITION

# Add date formatting options.
directive @dateformat(formatString: String, locale: String, fromNow: Boolean, difference: String) on FIELD_DEFINITION

# Link to node by foreign-key relation.
directive @link(by: String! = "id", from: String, on: String) on FIELD_DEFINITION

# Link to File node by relative path.
directive @fileByRelativePath(from: String) on FIELD_DEFINITION

# Proxy resolver from another field.
directive @proxy(from: String!, fromNode: Boolean! = false) on FIELD_DEFINITION

# Infer field types from field values.
directive @infer(
  # Don't add default resolvers to defined fields.
  noDefaultResolvers: Boolean
) on OBJECT

# Do not infer field types from field values.
directive @dontInfer(
  # Don't add default resolvers to defined fields.
  noDefaultResolvers: Boolean
) on OBJECT

# Define the mime-types handled by this type.
directive @mimeTypes(
  # The mime-types handled by this type.
  types: [String!]! = []
) on OBJECT

# Define parent-child relations between types. This is used to add `child*` and
# `children*` convenience fields like `childImageSharp`.
directive @childOf(
  # A list of mime-types this type is a child of. Usually these are the mime-types handled by a transformer plugin.
  mimeTypes: [String!]! = []

  # A list of types this type is a child of. Usually these are the types handled by a transformer plugin.
  types: [String!]! = []

  # Specifies whether a parent can have multiple children of this type or not.
  many: Boolean! = false
) on OBJECT

# Adds root query fields for an interface. All implementing types must also implement the Node interface.
directive @nodeInterface on INTERFACE

input AVIFOptions {
  quality: Int
  lossless: Boolean
  speed: Int
}

input BlurredOptions {
  # Width of the generated low-res preview. Default is 20px
  width: Int

  # Force the output format for the low-res preview. Default is to use the same
  # format as the input. You should rarely need to change this
  toFormat: ImageFormat
}

input BooleanQueryOperatorInput {
  eq: Boolean
  ne: Boolean
  in: [Boolean]
  nin: [Boolean]
}

# A date string, such as 2007-12-03, compliant with the ISO 8601 standard for
# representation of dates and times using the Gregorian calendar.
scalar Date

input DateQueryOperatorInput {
  eq: Date
  ne: Date
  gt: Date
  gte: Date
  lt: Date
  lte: Date
  in: [Date]
  nin: [Date]
}

type Directory implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type DirectoryConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  distinct(field: DirectoryFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: DirectoryFieldsEnum!): [DirectoryGroupConnection!]!
}

type DirectoryEdge {
  next: Directory
  node: Directory!
  previous: Directory
}

enum DirectoryFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input DirectoryFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type DirectoryGroupConnection {
  totalCount: Int!
  edges: [DirectoryEdge!]!
  nodes: [Directory!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input DirectorySortInput {
  fields: [DirectoryFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
  highlight: String!
  shadow: String!
  opacity: Int
}

type File implements Node {
  sourceInstanceName: String!
  absolutePath: String!
  relativePath: String!
  extension: String!
  size: Int!
  prettySize: String!
  modifiedTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  accessTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  changeTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  root: String!
  dir: String!
  base: String!
  ext: String!
  name: String!
  relativeDirectory: String!
  dev: Int!
  mode: Int!
  nlink: Int!
  uid: Int!
  gid: Int!
  rdev: Int!
  ino: Float!
  atimeMs: Float!
  mtimeMs: Float!
  ctimeMs: Float!
  atime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  mtime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  ctime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  birthtime: Date @deprecated(reason: "Use `birthTime` instead")
  birthtimeMs: Float @deprecated(reason: "Use `birthTime` instead")
  blksize: Int
  blocks: Int
  url: String

  # Copy file to static directory and return public url to it
  publicURL: String

  # Returns all children nodes filtered by type ImageSharp
  childrenImageSharp: [ImageSharp]

  # Returns the first child node of type ImageSharp or null if there are no children of given type on this node
  childImageSharp: ImageSharp
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type FileConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  distinct(field: FileFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: FileFieldsEnum!): [FileGroupConnection!]!
}

type FileEdge {
  next: File
  node: File!
  previous: File
}

enum FileFieldsEnum {
  sourceInstanceName
  absolutePath
  relativePath
  extension
  size
  prettySize
  modifiedTime
  accessTime
  changeTime
  birthTime
  root
  dir
  base
  ext
  name
  relativeDirectory
  dev
  mode
  nlink
  uid
  gid
  rdev
  ino
  atimeMs
  mtimeMs
  ctimeMs
  atime
  mtime
  ctime
  birthtime
  birthtimeMs
  blksize
  blocks
  url
  publicURL
  childrenImageSharp
  childrenImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childImageSharp___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input FileFilterInput {
  sourceInstanceName: StringQueryOperatorInput
  absolutePath: StringQueryOperatorInput
  relativePath: StringQueryOperatorInput
  extension: StringQueryOperatorInput
  size: IntQueryOperatorInput
  prettySize: StringQueryOperatorInput
  modifiedTime: DateQueryOperatorInput
  accessTime: DateQueryOperatorInput
  changeTime: DateQueryOperatorInput
  birthTime: DateQueryOperatorInput
  root: StringQueryOperatorInput
  dir: StringQueryOperatorInput
  base: StringQueryOperatorInput
  ext: StringQueryOperatorInput
  name: StringQueryOperatorInput
  relativeDirectory: StringQueryOperatorInput
  dev: IntQueryOperatorInput
  mode: IntQueryOperatorInput
  nlink: IntQueryOperatorInput
  uid: IntQueryOperatorInput
  gid: IntQueryOperatorInput
  rdev: IntQueryOperatorInput
  ino: FloatQueryOperatorInput
  atimeMs: FloatQueryOperatorInput
  mtimeMs: FloatQueryOperatorInput
  ctimeMs: FloatQueryOperatorInput
  atime: DateQueryOperatorInput
  mtime: DateQueryOperatorInput
  ctime: DateQueryOperatorInput
  birthtime: DateQueryOperatorInput
  birthtimeMs: FloatQueryOperatorInput
  blksize: IntQueryOperatorInput
  blocks: IntQueryOperatorInput
  url: StringQueryOperatorInput
  publicURL: StringQueryOperatorInput
  childrenImageSharp: ImageSharpFilterListInput
  childImageSharp: ImageSharpFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type FileGroupConnection {
  totalCount: Int!
  edges: [FileEdge!]!
  nodes: [File!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input FileSortInput {
  fields: [FileFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
  eq: Float
  ne: Float
  gt: Float
  gte: Float
  lt: Float
  lte: Float
  in: [Float]
  nin: [Float]
}

type GhostAuthor implements Node {
  slug: String!
  id: ID!
  name: String!
  profile_image: String
  cover_image: String
  bio: String
  website: String
  location: String
  facebook: String
  twitter: String
  meta_title: String
  meta_description: String
  url: String!
  count: GhostPostCount!
  postCount: Int!
  ghostId: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type GhostAuthorConnection {
  totalCount: Int!
  edges: [GhostAuthorEdge!]!
  nodes: [GhostAuthor!]!
  pageInfo: PageInfo!
  distinct(field: GhostAuthorFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: GhostAuthorFieldsEnum!): [GhostAuthorGroupConnection!]!
}

type GhostAuthorEdge {
  next: GhostAuthor
  node: GhostAuthor!
  previous: GhostAuthor
}

enum GhostAuthorFieldsEnum {
  slug
  id
  name
  profile_image
  cover_image
  bio
  website
  location
  facebook
  twitter
  meta_title
  meta_description
  url
  count___posts
  postCount
  ghostId
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input GhostAuthorFilterInput {
  slug: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  profile_image: StringQueryOperatorInput
  cover_image: StringQueryOperatorInput
  bio: StringQueryOperatorInput
  website: StringQueryOperatorInput
  location: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  twitter: StringQueryOperatorInput
  meta_title: StringQueryOperatorInput
  meta_description: StringQueryOperatorInput
  url: StringQueryOperatorInput
  count: GhostPostCountFilterInput
  postCount: IntQueryOperatorInput
  ghostId: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input GhostAuthorFilterListInput {
  elemMatch: GhostAuthorFilterInput
}

type GhostAuthorGroupConnection {
  totalCount: Int!
  edges: [GhostAuthorEdge!]!
  nodes: [GhostAuthor!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input GhostAuthorSortInput {
  fields: [GhostAuthorFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type GhostNavigation {
  label: String!
  url: String!
}

input GhostNavigationFilterInput {
  label: StringQueryOperatorInput
  url: StringQueryOperatorInput
}

input GhostNavigationFilterListInput {
  elemMatch: GhostNavigationFilterInput
}

type GhostPage implements Node {
  slug: String!
  id: ID!
  uuid: String!
  title: String!
  html: String
  comment_id: String
  feature_image: String
  featured: Boolean!
  visibility: String!
  created_at(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  updated_at(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  published_at(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  custom_excerpt: String
  codeinjection_head: String
  codeinjection_foot: String
  codeinjection_styles: String
  custom_template: String
  canonical_url: String
  send_email_when_published: Boolean
  tags: [GhostTag]
  authors: [GhostAuthor]!
  primary_author: GhostAuthor!
  primary_tag: GhostTag
  url: String!
  excerpt: String
  reading_time: Int
  email_subject: String
  plaintext: String
  page: Boolean
  og_image: String
  og_title: String
  og_description: String
  twitter_image: String
  twitter_title: String
  twitter_description: String
  meta_title: String
  meta_description: String
  access: Boolean
  ghostId: String
  gatsbyPath(filePath: String): String

  # Returns all children nodes filtered by type HtmlRehype
  childrenHtmlRehype: [HtmlRehype]

  # Returns the first child node of type HtmlRehype or null if there are no children of given type on this node
  childHtmlRehype: HtmlRehype
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type GhostPageConnection {
  totalCount: Int!
  edges: [GhostPageEdge!]!
  nodes: [GhostPage!]!
  pageInfo: PageInfo!
  distinct(field: GhostPageFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: GhostPageFieldsEnum!): [GhostPageGroupConnection!]!
}

type GhostPageEdge {
  next: GhostPage
  node: GhostPage!
  previous: GhostPage
}

enum GhostPageFieldsEnum {
  slug
  id
  uuid
  title
  html
  comment_id
  feature_image
  featured
  visibility
  created_at
  updated_at
  published_at
  custom_excerpt
  codeinjection_head
  codeinjection_foot
  codeinjection_styles
  custom_template
  canonical_url
  send_email_when_published
  tags
  tags___slug
  tags___id
  tags___name
  tags___description
  tags___feature_image
  tags___visibility
  tags___meta_title
  tags___meta_description
  tags___url
  tags___count___posts
  tags___postCount
  tags___og_image
  tags___og_title
  tags___og_description
  tags___twitter_image
  tags___twitter_title
  tags___twitter_description
  tags___codeinjection_head
  tags___codeinjection_foot
  tags___canonical_url
  tags___accent_color
  tags___ghostId
  tags___parent___id
  tags___parent___parent___id
  tags___parent___parent___children
  tags___parent___children
  tags___parent___children___id
  tags___parent___children___children
  tags___parent___internal___content
  tags___parent___internal___contentDigest
  tags___parent___internal___description
  tags___parent___internal___fieldOwners
  tags___parent___internal___ignoreType
  tags___parent___internal___mediaType
  tags___parent___internal___owner
  tags___parent___internal___type
  tags___children
  tags___children___id
  tags___children___parent___id
  tags___children___parent___children
  tags___children___children
  tags___children___children___id
  tags___children___children___children
  tags___children___internal___content
  tags___children___internal___contentDigest
  tags___children___internal___description
  tags___children___internal___fieldOwners
  tags___children___internal___ignoreType
  tags___children___internal___mediaType
  tags___children___internal___owner
  tags___children___internal___type
  tags___internal___content
  tags___internal___contentDigest
  tags___internal___description
  tags___internal___fieldOwners
  tags___internal___ignoreType
  tags___internal___mediaType
  tags___internal___owner
  tags___internal___type
  authors
  authors___slug
  authors___id
  authors___name
  authors___profile_image
  authors___cover_image
  authors___bio
  authors___website
  authors___location
  authors___facebook
  authors___twitter
  authors___meta_title
  authors___meta_description
  authors___url
  authors___count___posts
  authors___postCount
  authors___ghostId
  authors___parent___id
  authors___parent___parent___id
  authors___parent___parent___children
  authors___parent___children
  authors___parent___children___id
  authors___parent___children___children
  authors___parent___internal___content
  authors___parent___internal___contentDigest
  authors___parent___internal___description
  authors___parent___internal___fieldOwners
  authors___parent___internal___ignoreType
  authors___parent___internal___mediaType
  authors___parent___internal___owner
  authors___parent___internal___type
  authors___children
  authors___children___id
  authors___children___parent___id
  authors___children___parent___children
  authors___children___children
  authors___children___children___id
  authors___children___children___children
  authors___children___internal___content
  authors___children___internal___contentDigest
  authors___children___internal___description
  authors___children___internal___fieldOwners
  authors___children___internal___ignoreType
  authors___children___internal___mediaType
  authors___children___internal___owner
  authors___children___internal___type
  authors___internal___content
  authors___internal___contentDigest
  authors___internal___description
  authors___internal___fieldOwners
  authors___internal___ignoreType
  authors___internal___mediaType
  authors___internal___owner
  authors___internal___type
  primary_author___slug
  primary_author___id
  primary_author___name
  primary_author___profile_image
  primary_author___cover_image
  primary_author___bio
  primary_author___website
  primary_author___location
  primary_author___facebook
  primary_author___twitter
  primary_author___meta_title
  primary_author___meta_description
  primary_author___url
  primary_author___count___posts
  primary_author___postCount
  primary_author___ghostId
  primary_author___parent___id
  primary_author___parent___parent___id
  primary_author___parent___parent___children
  primary_author___parent___children
  primary_author___parent___children___id
  primary_author___parent___children___children
  primary_author___parent___internal___content
  primary_author___parent___internal___contentDigest
  primary_author___parent___internal___description
  primary_author___parent___internal___fieldOwners
  primary_author___parent___internal___ignoreType
  primary_author___parent___internal___mediaType
  primary_author___parent___internal___owner
  primary_author___parent___internal___type
  primary_author___children
  primary_author___children___id
  primary_author___children___parent___id
  primary_author___children___parent___children
  primary_author___children___children
  primary_author___children___children___id
  primary_author___children___children___children
  primary_author___children___internal___content
  primary_author___children___internal___contentDigest
  primary_author___children___internal___description
  primary_author___children___internal___fieldOwners
  primary_author___children___internal___ignoreType
  primary_author___children___internal___mediaType
  primary_author___children___internal___owner
  primary_author___children___internal___type
  primary_author___internal___content
  primary_author___internal___contentDigest
  primary_author___internal___description
  primary_author___internal___fieldOwners
  primary_author___internal___ignoreType
  primary_author___internal___mediaType
  primary_author___internal___owner
  primary_author___internal___type
  primary_tag___slug
  primary_tag___id
  primary_tag___name
  primary_tag___description
  primary_tag___feature_image
  primary_tag___visibility
  primary_tag___meta_title
  primary_tag___meta_description
  primary_tag___url
  primary_tag___count___posts
  primary_tag___postCount
  primary_tag___og_image
  primary_tag___og_title
  primary_tag___og_description
  primary_tag___twitter_image
  primary_tag___twitter_title
  primary_tag___twitter_description
  primary_tag___codeinjection_head
  primary_tag___codeinjection_foot
  primary_tag___canonical_url
  primary_tag___accent_color
  primary_tag___ghostId
  primary_tag___parent___id
  primary_tag___parent___parent___id
  primary_tag___parent___parent___children
  primary_tag___parent___children
  primary_tag___parent___children___id
  primary_tag___parent___children___children
  primary_tag___parent___internal___content
  primary_tag___parent___internal___contentDigest
  primary_tag___parent___internal___description
  primary_tag___parent___internal___fieldOwners
  primary_tag___parent___internal___ignoreType
  primary_tag___parent___internal___mediaType
  primary_tag___parent___internal___owner
  primary_tag___parent___internal___type
  primary_tag___children
  primary_tag___children___id
  primary_tag___children___parent___id
  primary_tag___children___parent___children
  primary_tag___children___children
  primary_tag___children___children___id
  primary_tag___children___children___children
  primary_tag___children___internal___content
  primary_tag___children___internal___contentDigest
  primary_tag___children___internal___description
  primary_tag___children___internal___fieldOwners
  primary_tag___children___internal___ignoreType
  primary_tag___children___internal___mediaType
  primary_tag___children___internal___owner
  primary_tag___children___internal___type
  primary_tag___internal___content
  primary_tag___internal___contentDigest
  primary_tag___internal___description
  primary_tag___internal___fieldOwners
  primary_tag___internal___ignoreType
  primary_tag___internal___mediaType
  primary_tag___internal___owner
  primary_tag___internal___type
  url
  excerpt
  reading_time
  email_subject
  plaintext
  page
  og_image
  og_title
  og_description
  twitter_image
  twitter_title
  twitter_description
  meta_title
  meta_description
  access
  ghostId
  gatsbyPath @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___context___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___context___slug @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___context___feature_image @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childrenHtmlRehype___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___html @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___htmlAst @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___tableOfContents @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___context___url @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___context___slug @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___context___feature_image @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  childHtmlRehype___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

input GhostPageFilterInput {
  slug: StringQueryOperatorInput
  id: StringQueryOperatorInput
  uuid: StringQueryOperatorInput
  title: StringQueryOperatorInput
  html: StringQueryOperatorInput
  comment_id: StringQueryOperatorInput
  feature_image: StringQueryOperatorInput
  featured: BooleanQueryOperatorInput
  visibility: StringQueryOperatorInput
  created_at: DateQueryOperatorInput
  updated_at: DateQueryOperatorInput
  published_at: DateQueryOperatorInput
  custom_excerpt: StringQueryOperatorInput
  codeinjection_head: StringQueryOperatorInput
  codeinjection_foot: StringQueryOperatorInput
  codeinjection_styles: StringQueryOperatorInput
  custom_template: StringQueryOperatorInput
  canonical_url: StringQueryOperatorInput
  send_email_when_published: BooleanQueryOperatorInput
  tags: GhostTagFilterListInput
  authors: GhostAuthorFilterListInput
  primary_author: GhostAuthorFilterInput
  primary_tag: GhostTagFilterInput
  url: StringQueryOperatorInput
  excerpt: StringQueryOperatorInput
  reading_time: IntQueryOperatorInput
  email_subject: StringQueryOperatorInput
  plaintext: StringQueryOperatorInput
  page: BooleanQueryOperatorInput
  og_image: StringQueryOperatorInput
  og_title: StringQueryOperatorInput
  og_description: StringQueryOperatorInput
  twitter_image: StringQueryOperatorInput
  twitter_title: StringQueryOperatorInput
  twitter_description: StringQueryOperatorInput
  meta_title: StringQueryOperatorInput
  meta_description: StringQueryOperatorInput
  access: BooleanQueryOperatorInput
  ghostId: StringQueryOperatorInput
  gatsbyPath: StringQueryOperatorInput
  childrenHtmlRehype: HtmlRehypeFilterListInput
  childHtmlRehype: HtmlRehypeFilterInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type GhostPageGroupConnection {
  totalCount: Int!
  edges: [GhostPageEdge!]!
  nodes: [GhostPage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input GhostPageSortInput {
  fields: [GhostPageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type GhostPost implements Node {
  slug: String!
  id: ID!
  uuid: String!
  title: String!
  html: String
  comment_id: String
  feature_image: String
  featured: Boolean!
  visibility: String!
  created_at(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date!
  updated_at(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  published_at(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  custom_excerpt: String
  codeinjection_head: String
  codeinjection_foot: String
  codeinjection_styles: String
  custom_template: String
  canonical_url: String
  send_email_when_published: Boolean
  tags: [GhostTag]
  authors: [GhostAuthor]!
  primary_author: GhostAuthor!
  primary_tag: GhostTag
  url: String!
  excerpt: String
  reading_time: Int
  email_subject: String
  plaintext: String
  page: Boolean
  og_image: String
  og_title: String
  og_description: String
  twitter_image: String
  twitter_title: String
  twitter_description: String
  meta_title: String
  meta_description: String
  email_recipient_filter: String
  access: Boolean
  ghostId: String

  # Returns all children nodes filtered by type HtmlRehype
  childrenHtmlRehype: [HtmlRehype]

  # Returns the first child node of type HtmlRehype or null if there are no children of given type on this node
  childHtmlRehype: HtmlRehype
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type GhostPostConnection {
  totalCount: Int!
  edges: [GhostPostEdge!]!
  nodes: [GhostPost!]!
  pageInfo: PageInfo!
  distinct(field: GhostPostFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: GhostPostFieldsEnum!): [GhostPostGroupConnection!]!
}

type GhostPostCount {
  posts: Int
}

input GhostPostCountFilterInput {
  posts: IntQueryOperatorInput
}

type GhostPostEdge {
  next: GhostPost
  node: GhostPost!
  previous: GhostPost
}

enum GhostPostFieldsEnum {
  slug
  id
  uuid
  title
  html
  comment_id
  feature_image
  featured
  visibility
  created_at
  updated_at
  published_at
  custom_excerpt
  codeinjection_head
  codeinjection_foot
  codeinjection_styles
  custom_template
  canonical_url
  send_email_when_published
  tags
  tags___slug
  tags___id
  tags___name
  tags___description
  tags___feature_image
  tags___visibility
  tags___meta_title
  tags___meta_description
  tags___url
  tags___count___posts
  tags___postCount
  tags___og_image
  tags___og_title
  tags___og_description
  tags___twitter_image
  tags___twitter_title
  tags___twitter_description
  tags___codeinjection_head
  tags___codeinjection_foot
  tags___canonical_url
  tags___accent_color
  tags___ghostId
  tags___parent___id
  tags___parent___parent___id
  tags___parent___parent___children
  tags___parent___children
  tags___parent___children___id
  tags___parent___children___children
  tags___parent___internal___content
  tags___parent___internal___contentDigest
  tags___parent___internal___description
  tags___parent___internal___fieldOwners
  tags___parent___internal___ignoreType
  tags___parent___internal___mediaType
  tags___parent___internal___owner
  tags___parent___internal___type
  tags___children
  tags___children___id
  tags___children___parent___id
  tags___children___parent___children
  tags___children___children
  tags___children___children___id
  tags___children___children___children
  tags___children___internal___content
  tags___children___internal___contentDigest
  tags___children___internal___description
  tags___children___internal___fieldOwners
  tags___children___internal___ignoreType
  tags___children___internal___mediaType
  tags___children___internal___owner
  tags___children___internal___type
  tags___internal___content
  tags___internal___contentDigest
  tags___internal___description
  tags___internal___fieldOwners
  tags___internal___ignoreType
  tags___internal___mediaType
  tags___internal___owner
  tags___internal___type
  authors
  authors___slug
  authors___id
  authors___name
  authors___profile_image
  authors___cover_image
  authors___bio
  authors___website
  authors___location
  authors___facebook
  authors___twitter
  authors___meta_title
  authors___meta_description
  authors___url
  authors___count___posts
  authors___postCount
  authors___ghostId
  authors___parent___id
  authors___parent___parent___id
  authors___parent___parent___children
  authors___parent___children
  authors___parent___children___id
  authors___parent___children___children
  authors___parent___internal___content
  authors___parent___internal___contentDigest
  authors___parent___internal___description
  authors___parent___internal___fieldOwners
  authors___parent___internal___ignoreType
  authors___parent___internal___mediaType
  authors___parent___internal___owner
  authors___parent___internal___type
  authors___children
  authors___children___id
  authors___children___parent___id
  authors___children___parent___children
  authors___children___children
  authors___children___children___id
  authors___children___children___children
  authors___children___internal___content
  authors___children___internal___contentDigest
  authors___children___internal___description
  authors___children___internal___fieldOwners
  authors___children___internal___ignoreType
  authors___children___internal___mediaType
  authors___children___internal___owner
  authors___children___internal___type
  authors___internal___content
  authors___internal___contentDigest
  authors___internal___description
  authors___internal___fieldOwners
  authors___internal___ignoreType
  authors___internal___mediaType
  authors___internal___owner
  authors___internal___type
  primary_author___slug
  primary_author___id
  primary_author___name
  primary_author___profile_image
  primary_author___cover_image
  primary_author___bio
  primary_author___website
  primary_author___location
  primary_author___facebook
  primary_author___twitter
  primary_author___meta_title
  primary_author___meta_description
  primary_author___url
  primary_author___count___posts
  primary_author___postCount
  primary_author___ghostId
  primary_author___parent___id
  primary_author___parent___parent___id
  primary_author___parent___parent___children
  primary_author___parent___children
  primary_author___parent___children___id
  primary_author___parent___children___children
  primary_author___parent___internal___content
  primary_author___parent___internal___contentDigest
  primary_author___parent___internal___description
  primary_author___parent___internal___fieldOwners
  primary_author___parent___internal___ignoreType
  primary_author___parent___internal___mediaType
  primary_author___parent___internal___owner
  primary_author___parent___internal___type
  primary_author___children
  primary_author___children___id
  primary_author___children___parent___id
  primary_author___children___parent___children
  primary_author___children___children
  primary_author___children___children___id
  primary_author___children___children___children
  primary_author___children___internal___content
  primary_author___children___internal___contentDigest
  primary_author___children___internal___description
  primary_author___children___internal___fieldOwners
  primary_author___children___internal___ignoreType
  primary_author___children___internal___mediaType
  primary_author___children___internal___owner
  primary_author___children___internal___type
  primary_author___internal___content
  primary_author___internal___contentDigest
  primary_author___internal___description
  primary_author___internal___fieldOwners
  primary_author___internal___ignoreType
  primary_author___internal___mediaType
  primary_author___internal___owner
  primary_author___internal___type
  primary_tag___slug
  primary_tag___id
  primary_tag___name
  primary_tag___description
  primary_tag___feature_image
  primary_tag___visibility
  primary_tag___meta_title
  primary_tag___meta_description
  primary_tag___url
  primary_tag___count___posts
  primary_tag___postCount
  primary_tag___og_image
  primary_tag___og_title
  primary_tag___og_description
  primary_tag___twitter_image
  primary_tag___twitter_title
  primary_tag___twitter_description
  primary_tag___codeinjection_head
  primary_tag___codeinjection_foot
  primary_tag___canonical_url
  primary_tag___accent_color
  primary_tag___ghostId
  primary_tag___parent___id
  primary_tag___parent___parent___id
  primary_tag___parent___parent___children
  primary_tag___parent___children
  primary_tag___parent___children___id
  primary_tag___parent___children___children
  primary_tag___parent___internal___content
  primary_tag___parent___internal___contentDigest
  primary_tag___parent___internal___description
  primary_tag___parent___internal___fieldOwners
  primary_tag___parent___internal___ignoreType
  primary_tag___parent___internal___mediaType
  primary_tag___parent___internal___owner
  primary_tag___parent___internal___type
  primary_tag___children
  primary_tag___children___id
  primary_tag___children___parent___id
  primary_tag___children___parent___children
  primary_tag___children___children
  primary_tag___children___children___id
  primary_tag___children___children___children
  primary_tag___children___internal___content
  primary_tag___children___internal___contentDigest
  primary_tag___children___internal___description
  primary_tag___children___internal___fieldOwners
  primary_tag___children___internal___ignoreType
  primary_tag___children___internal___mediaType
  primary_tag___children___internal___owner
  primary_tag___children___internal___type
  primary_tag___internal___content
  primary_tag___internal___contentDigest
  primary_tag___internal___description
  primary_tag___internal___fieldOwners
  primary_tag___internal___ignoreType
  primary_tag___internal___mediaType
  primary_tag___internal___owner
  primary_tag___internal___type
  url
  excerpt
  reading_time
  email_subject
  plaintext
  page
  og_image
  og_title
  og_description
  twitter_image
  twitter_title
  twitter_description
  meta_title
  meta_description
  email_recipient_filter
  access
  ghostId
  childrenHtmlRehype
  childrenHtmlRehype___html
  childrenHtmlRehype___htmlAst
  childrenHtmlRehype___tableOfContents
  childrenHtmlRehype___context___url
  childrenHtmlRehype___context___slug
  childrenHtmlRehype___context___feature_image
  childrenHtmlRehype___id
  childrenHtmlRehype___parent___id
  childrenHtmlRehype___parent___parent___id
  childrenHtmlRehype___parent___parent___children
  childrenHtmlRehype___parent___children
  childrenHtmlRehype___parent___children___id
  childrenHtmlRehype___parent___children___children
  childrenHtmlRehype___parent___internal___content
  childrenHtmlRehype___parent___internal___contentDigest
  childrenHtmlRehype___parent___internal___description
  childrenHtmlRehype___parent___internal___fieldOwners
  childrenHtmlRehype___parent___internal___ignoreType
  childrenHtmlRehype___parent___internal___mediaType
  childrenHtmlRehype___parent___internal___owner
  childrenHtmlRehype___parent___internal___type
  childrenHtmlRehype___children
  childrenHtmlRehype___children___id
  childrenHtmlRehype___children___parent___id
  childrenHtmlRehype___children___parent___children
  childrenHtmlRehype___children___children
  childrenHtmlRehype___children___children___id
  childrenHtmlRehype___children___children___children
  childrenHtmlRehype___children___internal___content
  childrenHtmlRehype___children___internal___contentDigest
  childrenHtmlRehype___children___internal___description
  childrenHtmlRehype___children___internal___fieldOwners
  childrenHtmlRehype___children___internal___ignoreType
  childrenHtmlRehype___children___internal___mediaType
  childrenHtmlRehype___children___internal___owner
  childrenHtmlRehype___children___internal___type
  childrenHtmlRehype___internal___content
  childrenHtmlRehype___internal___contentDigest
  childrenHtmlRehype___internal___description
  childrenHtmlRehype___internal___fieldOwners
  childrenHtmlRehype___internal___ignoreType
  childrenHtmlRehype___internal___mediaType
  childrenHtmlRehype___internal___owner
  childrenHtmlRehype___internal___type
  childHtmlRehype___html
  childHtmlRehype___htmlAst
  childHtmlRehype___tableOfContents
  childHtmlRehype___context___url
  childHtmlRehype___context___slug
  childHtmlRehype___context___feature_image
  childHtmlRehype___id
  childHtmlRehype___parent___id
  childHtmlRehype___parent___parent___id
  childHtmlRehype___parent___parent___children
  childHtmlRehype___parent___children
  childHtmlRehype___parent___children___id
  childHtmlRehype___parent___children___children
  childHtmlRehype___parent___internal___content
  childHtmlRehype___parent___internal___contentDigest
  childHtmlRehype___parent___internal___description
  childHtmlRehype___parent___internal___fieldOwners
  childHtmlRehype___parent___internal___ignoreType
  childHtmlRehype___parent___internal___mediaType
  childHtmlRehype___parent___internal___owner
  childHtmlRehype___parent___internal___type
  childHtmlRehype___children
  childHtmlRehype___children___id
  childHtmlRehype___children___parent___id
  childHtmlRehype___children___parent___children
  childHtmlRehype___children___children
  childHtmlRehype___children___children___id
  childHtmlRehype___children___children___children
  childHtmlRehype___children___internal___content
  childHtmlRehype___children___internal___contentDigest
  childHtmlRehype___children___internal___description
  childHtmlRehype___children___internal___fieldOwners
  childHtmlRehype___children___internal___ignoreType
  childHtmlRehype___children___internal___mediaType
  childHtmlRehype___children___internal___owner
  childHtmlRehype___children___internal___type
  childHtmlRehype___internal___content
  childHtmlRehype___internal___contentDigest
  childHtmlRehype___internal___description
  childHtmlRehype___internal___fieldOwners
  childHtmlRehype___internal___ignoreType
  childHtmlRehype___internal___mediaType
  childHtmlRehype___internal___owner
  childHtmlRehype___internal___type
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input GhostPostFilterInput {
  slug: StringQueryOperatorInput
  id: StringQueryOperatorInput
  uuid: StringQueryOperatorInput
  title: StringQueryOperatorInput
  html: StringQueryOperatorInput
  comment_id: StringQueryOperatorInput
  feature_image: StringQueryOperatorInput
  featured: BooleanQueryOperatorInput
  visibility: StringQueryOperatorInput
  created_at: DateQueryOperatorInput
  updated_at: DateQueryOperatorInput
  published_at: DateQueryOperatorInput
  custom_excerpt: StringQueryOperatorInput
  codeinjection_head: StringQueryOperatorInput
  codeinjection_foot: StringQueryOperatorInput
  codeinjection_styles: StringQueryOperatorInput
  custom_template: StringQueryOperatorInput
  canonical_url: StringQueryOperatorInput
  send_email_when_published: BooleanQueryOperatorInput
  tags: GhostTagFilterListInput
  authors: GhostAuthorFilterListInput
  primary_author: GhostAuthorFilterInput
  primary_tag: GhostTagFilterInput
  url: StringQueryOperatorInput
  excerpt: StringQueryOperatorInput
  reading_time: IntQueryOperatorInput
  email_subject: StringQueryOperatorInput
  plaintext: StringQueryOperatorInput
  page: BooleanQueryOperatorInput
  og_image: StringQueryOperatorInput
  og_title: StringQueryOperatorInput
  og_description: StringQueryOperatorInput
  twitter_image: StringQueryOperatorInput
  twitter_title: StringQueryOperatorInput
  twitter_description: StringQueryOperatorInput
  meta_title: StringQueryOperatorInput
  meta_description: StringQueryOperatorInput
  email_recipient_filter: StringQueryOperatorInput
  access: BooleanQueryOperatorInput
  ghostId: StringQueryOperatorInput
  childrenHtmlRehype: HtmlRehypeFilterListInput
  childHtmlRehype: HtmlRehypeFilterInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type GhostPostGroupConnection {
  totalCount: Int!
  edges: [GhostPostEdge!]!
  nodes: [GhostPost!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input GhostPostSortInput {
  fields: [GhostPostFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type GhostSettings implements Node {
  title: String
  description: String
  logo: String
  icon: String
  cover_image: String
  facebook: String
  twitter: String
  lang: String!
  timezone: String!
  navigation: [GhostNavigation]
  secondary_navigation: [GhostNavigation]
  meta_title: String
  meta_description: String
  og_image: String
  og_title: String
  og_description: String
  twitter_image: String
  twitter_title: String
  twitter_description: String
  url: String!
  codeinjection_head: String
  codeinjection_foot: String
  codeinjection_styles: String!
  active_timezone: String
  default_locale: String
  members_support_address: String
  ghostId: Int
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type GhostSettingsConnection {
  totalCount: Int!
  edges: [GhostSettingsEdge!]!
  nodes: [GhostSettings!]!
  pageInfo: PageInfo!
  distinct(field: GhostSettingsFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: GhostSettingsFieldsEnum!): [GhostSettingsGroupConnection!]!
}

type GhostSettingsEdge {
  next: GhostSettings
  node: GhostSettings!
  previous: GhostSettings
}

enum GhostSettingsFieldsEnum {
  title
  description
  logo
  icon
  cover_image
  facebook
  twitter
  lang
  timezone
  navigation
  navigation___label
  navigation___url
  secondary_navigation
  secondary_navigation___label
  secondary_navigation___url
  meta_title
  meta_description
  og_image
  og_title
  og_description
  twitter_image
  twitter_title
  twitter_description
  url
  codeinjection_head
  codeinjection_foot
  codeinjection_styles
  active_timezone
  default_locale
  members_support_address
  ghostId
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input GhostSettingsFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  logo: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  cover_image: StringQueryOperatorInput
  facebook: StringQueryOperatorInput
  twitter: StringQueryOperatorInput
  lang: StringQueryOperatorInput
  timezone: StringQueryOperatorInput
  navigation: GhostNavigationFilterListInput
  secondary_navigation: GhostNavigationFilterListInput
  meta_title: StringQueryOperatorInput
  meta_description: StringQueryOperatorInput
  og_image: StringQueryOperatorInput
  og_title: StringQueryOperatorInput
  og_description: StringQueryOperatorInput
  twitter_image: StringQueryOperatorInput
  twitter_title: StringQueryOperatorInput
  twitter_description: StringQueryOperatorInput
  url: StringQueryOperatorInput
  codeinjection_head: StringQueryOperatorInput
  codeinjection_foot: StringQueryOperatorInput
  codeinjection_styles: StringQueryOperatorInput
  active_timezone: StringQueryOperatorInput
  default_locale: StringQueryOperatorInput
  members_support_address: StringQueryOperatorInput
  ghostId: IntQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type GhostSettingsGroupConnection {
  totalCount: Int!
  edges: [GhostSettingsEdge!]!
  nodes: [GhostSettings!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input GhostSettingsSortInput {
  fields: [GhostSettingsFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type GhostTag implements Node {
  slug: String!
  id: ID!
  name: String!
  description: String
  feature_image: String
  visibility: String!
  meta_title: String
  meta_description: String
  url: String!
  count: GhostPostCount
  postCount: Int
  og_image: String
  og_title: String
  og_description: String
  twitter_image: String
  twitter_title: String
  twitter_description: String
  codeinjection_head: String
  codeinjection_foot: String
  canonical_url: String
  accent_color: String
  ghostId: String
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type GhostTagConnection {
  totalCount: Int!
  edges: [GhostTagEdge!]!
  nodes: [GhostTag!]!
  pageInfo: PageInfo!
  distinct(field: GhostTagFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: GhostTagFieldsEnum!): [GhostTagGroupConnection!]!
}

type GhostTagEdge {
  next: GhostTag
  node: GhostTag!
  previous: GhostTag
}

enum GhostTagFieldsEnum {
  slug
  id
  name
  description
  feature_image
  visibility
  meta_title
  meta_description
  url
  count___posts
  postCount
  og_image
  og_title
  og_description
  twitter_image
  twitter_title
  twitter_description
  codeinjection_head
  codeinjection_foot
  canonical_url
  accent_color
  ghostId
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input GhostTagFilterInput {
  slug: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  feature_image: StringQueryOperatorInput
  visibility: StringQueryOperatorInput
  meta_title: StringQueryOperatorInput
  meta_description: StringQueryOperatorInput
  url: StringQueryOperatorInput
  count: GhostPostCountFilterInput
  postCount: IntQueryOperatorInput
  og_image: StringQueryOperatorInput
  og_title: StringQueryOperatorInput
  og_description: StringQueryOperatorInput
  twitter_image: StringQueryOperatorInput
  twitter_title: StringQueryOperatorInput
  twitter_description: StringQueryOperatorInput
  codeinjection_head: StringQueryOperatorInput
  codeinjection_foot: StringQueryOperatorInput
  canonical_url: StringQueryOperatorInput
  accent_color: StringQueryOperatorInput
  ghostId: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input GhostTagFilterListInput {
  elemMatch: GhostTagFilterInput
}

type GhostTagGroupConnection {
  totalCount: Int!
  edges: [GhostTagEdge!]!
  nodes: [GhostTag!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input GhostTagSortInput {
  fields: [GhostTagFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type HtmlRehype implements Node {
  html: String
  htmlAst: JSON
  tableOfContents: JSON
  context: HtmlRehypeContext
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type HtmlRehypeConnection {
  totalCount: Int!
  edges: [HtmlRehypeEdge!]!
  nodes: [HtmlRehype!]!
  pageInfo: PageInfo!
  distinct(field: HtmlRehypeFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: HtmlRehypeFieldsEnum!): [HtmlRehypeGroupConnection!]!
}

type HtmlRehypeContext {
  url: String
  slug: String
  feature_image: String
}

input HtmlRehypeContextFilterInput {
  url: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  feature_image: StringQueryOperatorInput
}

type HtmlRehypeEdge {
  next: HtmlRehype
  node: HtmlRehype!
  previous: HtmlRehype
}

enum HtmlRehypeFieldsEnum {
  html
  htmlAst
  tableOfContents
  context___url
  context___slug
  context___feature_image
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input HtmlRehypeFilterInput {
  html: StringQueryOperatorInput
  htmlAst: JSONQueryOperatorInput
  tableOfContents: JSONQueryOperatorInput
  context: HtmlRehypeContextFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input HtmlRehypeFilterListInput {
  elemMatch: HtmlRehypeFilterInput
}

type HtmlRehypeGroupConnection {
  totalCount: Int!
  edges: [HtmlRehypeEdge!]!
  nodes: [HtmlRehype!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input HtmlRehypeSortInput {
  fields: [HtmlRehypeFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum ImageCropFocus {
  CENTER
  NORTH
  NORTHEAST
  EAST
  SOUTHEAST
  SOUTH
  SOUTHWEST
  WEST
  NORTHWEST
  ENTROPY
  ATTENTION
}

enum ImageFit {
  COVER
  CONTAIN
  FILL
  INSIDE
  OUTSIDE
}

enum ImageFormat {
  NO_CHANGE
  AUTO
  JPG
  PNG
  WEBP
  AVIF
}

enum ImageLayout {
  FIXED
  FULL_WIDTH
  CONSTRAINED
}

enum ImagePlaceholder {
  DOMINANT_COLOR
  TRACED_SVG
  BLURRED
  NONE
}

type ImageSharp implements Node {
  fixed(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpFixed
  resolutions(width: Int, height: Int, base64Width: Int, jpegProgressive: Boolean = true, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, traceSVG: Potrace, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResolutions @deprecated(reason: "Resolutions was deprecated in Gatsby v2. It's been renamed to \"fixed\" https://example.com/write-docs-and-fix-this-example-link")
  fluid(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpFluid
  sizes(
    maxWidth: Int
    maxHeight: Int
    base64Width: Int
    grayscale: Boolean = false
    jpegProgressive: Boolean = true
    pngCompressionSpeed: Int = 4
    duotone: DuotoneGradient
    traceSVG: Potrace
    quality: Int
    jpegQuality: Int
    pngQuality: Int
    webpQuality: Int
    toFormat: ImageFormat = AUTO
    toFormatBase64: ImageFormat = AUTO
    cropFocus: ImageCropFocus = ATTENTION
    fit: ImageFit = COVER
    background: String = "rgba(0,0,0,1)"
    rotate: Int = 0
    trim: Float = 0
    sizes: String = ""

    # A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]
    srcSetBreakpoints: [Int] = []
  ): ImageSharpSizes @deprecated(reason: "Sizes was deprecated in Gatsby v2. It's been renamed to \"fluid\" https://example.com/write-docs-and-fix-this-example-link")
  gatsbyImageData(
    # The layout for the image.
    # FIXED: A static image sized, that does not resize according to the screen width
    # FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if
    # it isn't going to be the full width of the screen. 
    # CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
    layout: ImageLayout = CONSTRAINED

    # The display width of the generated image for layout = FIXED, and the maximum
    # display width of the largest image for layout = CONSTRAINED.  
    # Ignored if layout = FLUID.
    width: Int

    # The display height of the generated image for layout = FIXED, and the
    # maximum display height of the largest image for layout = CONSTRAINED.  
    # The image will be cropped if the aspect ratio does not match the source
    # image. If omitted, it is calculated from the supplied width, 
    # matching the aspect ratio of the source image.
    height: Int

    # If set along with width or height, this will set the value of the other
    # dimension to match the provided aspect ratio, cropping the image if needed. 
    # If neither width or height is provided, height will be set based on the intrinsic width of the source image.
    aspectRatio: Float

    # Format of generated placeholder image, displayed while the main image loads. 
    # BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
    # DOMINANT_COLOR: a solid color, calculated from the dominant color of the image. 
    # TRACED_SVG: a low-resolution traced SVG of the image.
    # NONE: no placeholder. Set "background" to use a fixed background color.
    placeholder: ImagePlaceholder = DOMINANT_COLOR

    # Options for the low-resolution placeholder image. Set placeholder to "BLURRED" to use this
    blurredOptions: BlurredOptions

    # Options for traced placeholder SVGs. You also should set placeholder to "TRACED_SVG".
    tracedSVGOptions: Potrace

    # The image formats to generate. Valid values are "AUTO" (meaning the same
    # format as the source image), "JPG", "PNG", "WEBP" and "AVIF". 
    # The default value is [AUTO, WEBP], and you should rarely need to change
    # this. Take care if you specify JPG or PNG when you do
    # not know the formats of the source images, as this could lead to unwanted
    # results such as converting JPEGs to PNGs. Specifying 
    # both PNG and JPG is not supported and will be ignored.
    formats: [ImageFormat] = [WEBP]

    # A list of image pixel densities to generate. It will never generate images
    # larger than the source, and will always include a 1x image. 
    # Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1,
    # 2] for CONSTRAINED. In this case, an image with a constrained layout 
    # and width = 400 would generate images at 100, 200, 400 and 800px wide.
    # Ignored for FULL_WIDTH images, which use breakpoints instead
    outputPixelDensities: [Float]

    # Specifies the image widths to generate. For FIXED and CONSTRAINED images it
    # is better to allow these to be determined automatically,
    # based on the image size. For FULL_WIDTH images this can be used to override
    # the default, which is [750, 1080, 1366, 1920].
    # It will never generate any images larger than the source.
    breakpoints: [Int]

    # The "sizes" property, passed to the img tag. This describes the display size of the image. 
    # This does not affect the generated images, but is used by the browser to decide which images to download. 
    # You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
    # does not actually span the full width of the screen, in which case you should pass the correct size here.
    sizes: String

    # The default quality. This is overridden by any format-specific options
    quality: Int

    # Options to pass to sharp when generating JPG images.
    jpgOptions: JPGOptions

    # Options to pass to sharp when generating PNG images.
    pngOptions: PNGOptions

    # Options to pass to sharp when generating WebP images.
    webpOptions: WebPOptions

    # Options to pass to sharp when generating AVIF images.
    avifOptions: AVIFOptions

    # Options to pass to sharp to control cropping and other image manipulations.
    transformOptions: TransformOptions

    # Background color applied to the wrapper. Also passed to sharp to use as a
    # background when "letterboxing" an image to another aspect ratio.
    background: String = "rgba(0,0,0,0)"
  ): JSON!
  original: ImageSharpOriginal
  resize(width: Int, height: Int, quality: Int, jpegQuality: Int, pngQuality: Int, webpQuality: Int, jpegProgressive: Boolean = true, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, grayscale: Boolean = false, duotone: DuotoneGradient, base64: Boolean = false, traceSVG: Potrace, toFormat: ImageFormat = AUTO, cropFocus: ImageCropFocus = ATTENTION, fit: ImageFit = COVER, background: String = "rgba(0,0,0,1)", rotate: Int = 0, trim: Float = 0): ImageSharpResize
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type ImageSharpConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  distinct(field: ImageSharpFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: ImageSharpFieldsEnum!): [ImageSharpGroupConnection!]!
}

type ImageSharpEdge {
  next: ImageSharp
  node: ImageSharp!
  previous: ImageSharp
}

enum ImageSharpFieldsEnum {
  fixed___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fixed___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resolutions___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  fluid___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___base64 @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSet @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___srcSetWebp @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___sizes @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalImg @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationWidth @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  sizes___presentationHeight @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  gatsbyImageData @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  original___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___src @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___tracedSVG @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___width @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___height @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___aspectRatio @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  resize___originalName @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___parent___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___parent___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___id @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___children___children @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  children___internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___content @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___contentDigest @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___description @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___fieldOwners @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___ignoreType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___mediaType @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___owner @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
  internal___type @deprecated(reason: "Sorting on fields that need arguments to resolve is deprecated.")
}

input ImageSharpFilterInput {
  fixed: ImageSharpFixedFilterInput
  resolutions: ImageSharpResolutionsFilterInput
  fluid: ImageSharpFluidFilterInput
  sizes: ImageSharpSizesFilterInput
  gatsbyImageData: JSONQueryOperatorInput
  original: ImageSharpOriginalFilterInput
  resize: ImageSharpResizeFilterInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input ImageSharpFilterListInput {
  elemMatch: ImageSharpFilterInput
}

type ImageSharpFixed {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

input ImageSharpFixedFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpFluid {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

input ImageSharpFluidFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

type ImageSharpGroupConnection {
  totalCount: Int!
  edges: [ImageSharpEdge!]!
  nodes: [ImageSharp!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type ImageSharpOriginal {
  width: Float
  height: Float
  src: String
}

input ImageSharpOriginalFilterInput {
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
}

type ImageSharpResize {
  src: String
  tracedSVG: String
  width: Int
  height: Int
  aspectRatio: Float
  originalName: String
}

input ImageSharpResizeFilterInput {
  src: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  width: IntQueryOperatorInput
  height: IntQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpResolutions {
  base64: String
  tracedSVG: String
  aspectRatio: Float
  width: Float!
  height: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  originalName: String
}

input ImageSharpResolutionsFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  width: FloatQueryOperatorInput
  height: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
}

type ImageSharpSizes {
  base64: String
  tracedSVG: String
  aspectRatio: Float!
  src: String!
  srcSet: String!
  srcWebp: String
  srcSetWebp: String
  sizes: String!
  originalImg: String
  originalName: String
  presentationWidth: Int!
  presentationHeight: Int!
}

input ImageSharpSizesFilterInput {
  base64: StringQueryOperatorInput
  tracedSVG: StringQueryOperatorInput
  aspectRatio: FloatQueryOperatorInput
  src: StringQueryOperatorInput
  srcSet: StringQueryOperatorInput
  srcWebp: StringQueryOperatorInput
  srcSetWebp: StringQueryOperatorInput
  sizes: StringQueryOperatorInput
  originalImg: StringQueryOperatorInput
  originalName: StringQueryOperatorInput
  presentationWidth: IntQueryOperatorInput
  presentationHeight: IntQueryOperatorInput
}

input ImageSharpSortInput {
  fields: [ImageSharpFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type Internal {
  content: String
  contentDigest: String!
  description: String
  fieldOwners: [String]
  ignoreType: Boolean
  mediaType: String
  owner: String!
  type: String!
}

input InternalFilterInput {
  content: StringQueryOperatorInput
  contentDigest: StringQueryOperatorInput
  description: StringQueryOperatorInput
  fieldOwners: StringQueryOperatorInput
  ignoreType: BooleanQueryOperatorInput
  mediaType: StringQueryOperatorInput
  owner: StringQueryOperatorInput
  type: StringQueryOperatorInput
}

input IntQueryOperatorInput {
  eq: Int
  ne: Int
  gt: Int
  gte: Int
  lt: Int
  lte: Int
  in: [Int]
  nin: [Int]
}

input JPGOptions {
  quality: Int
  progressive: Boolean = true
}

# The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
scalar JSON

input JSONQueryOperatorInput {
  eq: JSON
  ne: JSON
  in: [JSON]
  nin: [JSON]
  regex: JSON
  glob: JSON
}

# Node Interface
interface Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

input NodeFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

input NodeFilterListInput {
  elemMatch: NodeFilterInput
}

type PageInfo {
  currentPage: Int!
  hasPreviousPage: Boolean!
  hasNextPage: Boolean!
  itemCount: Int!
  pageCount: Int!
  perPage: Int
  totalCount: Int!
}

input PNGOptions {
  quality: Int
  compressionSpeed: Int = 4
}

input Potrace {
  turnPolicy: PotraceTurnPolicy
  turdSize: Float
  alphaMax: Float
  optCurve: Boolean
  optTolerance: Float
  threshold: Int
  blackOnWhite: Boolean
  color: String
  background: String
}

enum PotraceTurnPolicy {
  TURNPOLICY_BLACK
  TURNPOLICY_WHITE
  TURNPOLICY_LEFT
  TURNPOLICY_RIGHT
  TURNPOLICY_MINORITY
  TURNPOLICY_MAJORITY
}

type Query {
  file(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, url: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, childrenImageSharp: ImageSharpFilterListInput, childImageSharp: ImageSharpFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): File
  allFile(filter: FileFilterInput, sort: FileSortInput, skip: Int, limit: Int): FileConnection!
  directory(sourceInstanceName: StringQueryOperatorInput, absolutePath: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, extension: StringQueryOperatorInput, size: IntQueryOperatorInput, prettySize: StringQueryOperatorInput, modifiedTime: DateQueryOperatorInput, accessTime: DateQueryOperatorInput, changeTime: DateQueryOperatorInput, birthTime: DateQueryOperatorInput, root: StringQueryOperatorInput, dir: StringQueryOperatorInput, base: StringQueryOperatorInput, ext: StringQueryOperatorInput, name: StringQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, dev: IntQueryOperatorInput, mode: IntQueryOperatorInput, nlink: IntQueryOperatorInput, uid: IntQueryOperatorInput, gid: IntQueryOperatorInput, rdev: IntQueryOperatorInput, ino: FloatQueryOperatorInput, atimeMs: FloatQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, atime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, ctime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Directory
  allDirectory(filter: DirectoryFilterInput, sort: DirectorySortInput, skip: Int, limit: Int): DirectoryConnection!
  site(buildTime: DateQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput, port: IntQueryOperatorInput, host: StringQueryOperatorInput, pathPrefix: StringQueryOperatorInput, flags: SiteFlagsFilterInput, polyfill: BooleanQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): Site
  allSite(filter: SiteFilterInput, sort: SiteSortInput, skip: Int, limit: Int): SiteConnection!
  sitePage(path: StringQueryOperatorInput, component: StringQueryOperatorInput, internalComponentName: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, matchPath: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, context: SitePageContextFilterInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): SitePage
  allSitePage(filter: SitePageFilterInput, sort: SitePageSortInput, skip: Int, limit: Int): SitePageConnection!
  ghostPost(slug: StringQueryOperatorInput, id: StringQueryOperatorInput, uuid: StringQueryOperatorInput, title: StringQueryOperatorInput, html: StringQueryOperatorInput, comment_id: StringQueryOperatorInput, feature_image: StringQueryOperatorInput, featured: BooleanQueryOperatorInput, visibility: StringQueryOperatorInput, created_at: DateQueryOperatorInput, updated_at: DateQueryOperatorInput, published_at: DateQueryOperatorInput, custom_excerpt: StringQueryOperatorInput, codeinjection_head: StringQueryOperatorInput, codeinjection_foot: StringQueryOperatorInput, codeinjection_styles: StringQueryOperatorInput, custom_template: StringQueryOperatorInput, canonical_url: StringQueryOperatorInput, send_email_when_published: BooleanQueryOperatorInput, tags: GhostTagFilterListInput, authors: GhostAuthorFilterListInput, primary_author: GhostAuthorFilterInput, primary_tag: GhostTagFilterInput, url: StringQueryOperatorInput, excerpt: StringQueryOperatorInput, reading_time: IntQueryOperatorInput, email_subject: StringQueryOperatorInput, plaintext: StringQueryOperatorInput, page: BooleanQueryOperatorInput, og_image: StringQueryOperatorInput, og_title: StringQueryOperatorInput, og_description: StringQueryOperatorInput, twitter_image: StringQueryOperatorInput, twitter_title: StringQueryOperatorInput, twitter_description: StringQueryOperatorInput, meta_title: StringQueryOperatorInput, meta_description: StringQueryOperatorInput, email_recipient_filter: StringQueryOperatorInput, access: BooleanQueryOperatorInput, ghostId: StringQueryOperatorInput, childrenHtmlRehype: HtmlRehypeFilterListInput, childHtmlRehype: HtmlRehypeFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): GhostPost
  allGhostPost(filter: GhostPostFilterInput, sort: GhostPostSortInput, skip: Int, limit: Int): GhostPostConnection!
  ghostPage(slug: StringQueryOperatorInput, id: StringQueryOperatorInput, uuid: StringQueryOperatorInput, title: StringQueryOperatorInput, html: StringQueryOperatorInput, comment_id: StringQueryOperatorInput, feature_image: StringQueryOperatorInput, featured: BooleanQueryOperatorInput, visibility: StringQueryOperatorInput, created_at: DateQueryOperatorInput, updated_at: DateQueryOperatorInput, published_at: DateQueryOperatorInput, custom_excerpt: StringQueryOperatorInput, codeinjection_head: StringQueryOperatorInput, codeinjection_foot: StringQueryOperatorInput, codeinjection_styles: StringQueryOperatorInput, custom_template: StringQueryOperatorInput, canonical_url: StringQueryOperatorInput, send_email_when_published: BooleanQueryOperatorInput, tags: GhostTagFilterListInput, authors: GhostAuthorFilterListInput, primary_author: GhostAuthorFilterInput, primary_tag: GhostTagFilterInput, url: StringQueryOperatorInput, excerpt: StringQueryOperatorInput, reading_time: IntQueryOperatorInput, email_subject: StringQueryOperatorInput, plaintext: StringQueryOperatorInput, page: BooleanQueryOperatorInput, og_image: StringQueryOperatorInput, og_title: StringQueryOperatorInput, og_description: StringQueryOperatorInput, twitter_image: StringQueryOperatorInput, twitter_title: StringQueryOperatorInput, twitter_description: StringQueryOperatorInput, meta_title: StringQueryOperatorInput, meta_description: StringQueryOperatorInput, access: BooleanQueryOperatorInput, ghostId: StringQueryOperatorInput, gatsbyPath: StringQueryOperatorInput, childrenHtmlRehype: HtmlRehypeFilterListInput, childHtmlRehype: HtmlRehypeFilterInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): GhostPage
  allGhostPage(filter: GhostPageFilterInput, sort: GhostPageSortInput, skip: Int, limit: Int): GhostPageConnection!
  ghostTag(slug: StringQueryOperatorInput, id: StringQueryOperatorInput, name: StringQueryOperatorInput, description: StringQueryOperatorInput, feature_image: StringQueryOperatorInput, visibility: StringQueryOperatorInput, meta_title: StringQueryOperatorInput, meta_description: StringQueryOperatorInput, url: StringQueryOperatorInput, count: GhostPostCountFilterInput, postCount: IntQueryOperatorInput, og_image: StringQueryOperatorInput, og_title: StringQueryOperatorInput, og_description: StringQueryOperatorInput, twitter_image: StringQueryOperatorInput, twitter_title: StringQueryOperatorInput, twitter_description: StringQueryOperatorInput, codeinjection_head: StringQueryOperatorInput, codeinjection_foot: StringQueryOperatorInput, canonical_url: StringQueryOperatorInput, accent_color: StringQueryOperatorInput, ghostId: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): GhostTag
  allGhostTag(filter: GhostTagFilterInput, sort: GhostTagSortInput, skip: Int, limit: Int): GhostTagConnection!
  ghostAuthor(slug: StringQueryOperatorInput, id: StringQueryOperatorInput, name: StringQueryOperatorInput, profile_image: StringQueryOperatorInput, cover_image: StringQueryOperatorInput, bio: StringQueryOperatorInput, website: StringQueryOperatorInput, location: StringQueryOperatorInput, facebook: StringQueryOperatorInput, twitter: StringQueryOperatorInput, meta_title: StringQueryOperatorInput, meta_description: StringQueryOperatorInput, url: StringQueryOperatorInput, count: GhostPostCountFilterInput, postCount: IntQueryOperatorInput, ghostId: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): GhostAuthor
  allGhostAuthor(filter: GhostAuthorFilterInput, sort: GhostAuthorSortInput, skip: Int, limit: Int): GhostAuthorConnection!
  ghostSettings(title: StringQueryOperatorInput, description: StringQueryOperatorInput, logo: StringQueryOperatorInput, icon: StringQueryOperatorInput, cover_image: StringQueryOperatorInput, facebook: StringQueryOperatorInput, twitter: StringQueryOperatorInput, lang: StringQueryOperatorInput, timezone: StringQueryOperatorInput, navigation: GhostNavigationFilterListInput, secondary_navigation: GhostNavigationFilterListInput, meta_title: StringQueryOperatorInput, meta_description: StringQueryOperatorInput, og_image: StringQueryOperatorInput, og_title: StringQueryOperatorInput, og_description: StringQueryOperatorInput, twitter_image: StringQueryOperatorInput, twitter_title: StringQueryOperatorInput, twitter_description: StringQueryOperatorInput, url: StringQueryOperatorInput, codeinjection_head: StringQueryOperatorInput, codeinjection_foot: StringQueryOperatorInput, codeinjection_styles: StringQueryOperatorInput, active_timezone: StringQueryOperatorInput, default_locale: StringQueryOperatorInput, members_support_address: StringQueryOperatorInput, ghostId: IntQueryOperatorInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): GhostSettings
  allGhostSettings(filter: GhostSettingsFilterInput, sort: GhostSettingsSortInput, skip: Int, limit: Int): GhostSettingsConnection!
  imageSharp(fixed: ImageSharpFixedFilterInput, resolutions: ImageSharpResolutionsFilterInput, fluid: ImageSharpFluidFilterInput, sizes: ImageSharpSizesFilterInput, gatsbyImageData: JSONQueryOperatorInput, original: ImageSharpOriginalFilterInput, resize: ImageSharpResizeFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): ImageSharp
  allImageSharp(filter: ImageSharpFilterInput, sort: ImageSharpSortInput, skip: Int, limit: Int): ImageSharpConnection!
  htmlRehype(html: StringQueryOperatorInput, htmlAst: JSONQueryOperatorInput, tableOfContents: JSONQueryOperatorInput, context: HtmlRehypeContextFilterInput, id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput): HtmlRehype
  allHtmlRehype(filter: HtmlRehypeFilterInput, sort: HtmlRehypeSortInput, skip: Int, limit: Int): HtmlRehypeConnection!
  siteBuildMetadata(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, buildTime: DateQueryOperatorInput): SiteBuildMetadata
  allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, sort: SiteBuildMetadataSortInput, skip: Int, limit: Int): SiteBuildMetadataConnection!
  sitePlugin(id: StringQueryOperatorInput, parent: NodeFilterInput, children: NodeFilterListInput, internal: InternalFilterInput, resolve: StringQueryOperatorInput, name: StringQueryOperatorInput, version: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, nodeAPIs: StringQueryOperatorInput, browserAPIs: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, pluginFilepath: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput): SitePlugin
  allSitePlugin(filter: SitePluginFilterInput, sort: SitePluginSortInput, skip: Int, limit: Int): SitePluginConnection!
}

type Site implements Node {
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
  siteMetadata: SiteSiteMetadata
  port: Int
  host: String
  pathPrefix: String
  flags: SiteFlags
  polyfill: Boolean
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SiteBuildMetadata implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  buildTime(
    # Format the date using Moment.js' date tokens, e.g. `date(formatString: "YYYY
    # MMMM DD")`. See https://momentjs.com/docs/#/displaying/format/ for
    # documentation for different tokens.
    formatString: String

    # Returns a string generated with Moment.js' `fromNow` function
    fromNow: Boolean

    # Returns the difference between this date and the current time. Defaults to
    # "milliseconds" but you can also pass in as the measurement "years",
    # "months", "weeks", "days", "hours", "minutes", and "seconds".
    difference: String

    # Configures the locale Moment.js will use to format the date.
    locale: String
  ): Date
}

type SiteBuildMetadataConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SiteBuildMetadataFieldsEnum!): [SiteBuildMetadataGroupConnection!]!
}

type SiteBuildMetadataEdge {
  next: SiteBuildMetadata
  node: SiteBuildMetadata!
  previous: SiteBuildMetadata
}

enum SiteBuildMetadataFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  buildTime
}

input SiteBuildMetadataFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  buildTime: DateQueryOperatorInput
}

type SiteBuildMetadataGroupConnection {
  totalCount: Int!
  edges: [SiteBuildMetadataEdge!]!
  nodes: [SiteBuildMetadata!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SiteBuildMetadataSortInput {
  fields: [SiteBuildMetadataFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  distinct(field: SiteFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SiteFieldsEnum!): [SiteGroupConnection!]!
}

type SiteEdge {
  next: Site
  node: Site!
  previous: Site
}

enum SiteFieldsEnum {
  buildTime
  siteMetadata___title
  siteMetadata___description
  siteMetadata___titleShort
  siteMetadata___pathPrefix
  siteMetadata___siteUrl
  siteMetadata___buildContext
  siteMetadata___version
  siteMetadata___social___twitter___username
  siteMetadata___social___facebook___username
  siteMetadata___social___instagram___username
  siteMetadata___language
  port
  host
  pathPrefix
  flags___FAST_REFRESH
  flags___PRESERVE_FILE_DOWNLOAD_CACHE
  flags___PRESERVE_WEBPACK_CACHE
  polyfill
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input SiteFilterInput {
  buildTime: DateQueryOperatorInput
  siteMetadata: SiteSiteMetadataFilterInput
  port: IntQueryOperatorInput
  host: StringQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  flags: SiteFlagsFilterInput
  polyfill: BooleanQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type SiteFlags {
  FAST_REFRESH: Boolean
  PRESERVE_FILE_DOWNLOAD_CACHE: Boolean
  PRESERVE_WEBPACK_CACHE: Boolean
}

input SiteFlagsFilterInput {
  FAST_REFRESH: BooleanQueryOperatorInput
  PRESERVE_FILE_DOWNLOAD_CACHE: BooleanQueryOperatorInput
  PRESERVE_WEBPACK_CACHE: BooleanQueryOperatorInput
}

type SiteGroupConnection {
  totalCount: Int!
  edges: [SiteEdge!]!
  nodes: [Site!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type SitePage implements Node {
  path: String!
  component: String!
  internalComponentName: String!
  componentChunkName: String!
  matchPath: String
  isCreatedByStatefulCreatePages: Boolean
  context: SitePageContext
  pluginCreator: SitePlugin
  pluginCreatorId: String
  componentPath: String
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
}

type SitePageConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  distinct(field: SitePageFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SitePageFieldsEnum!): [SitePageGroupConnection!]!
}

type SitePageContext {
  id: String
  slug: String
  _xparams: SitePageContext_xparams
}

type SitePageContext_xparams {
  slug: String
}

input SitePageContext_xparamsFilterInput {
  slug: StringQueryOperatorInput
}

input SitePageContextFilterInput {
  id: StringQueryOperatorInput
  slug: StringQueryOperatorInput
  _xparams: SitePageContext_xparamsFilterInput
}

type SitePageEdge {
  next: SitePage
  node: SitePage!
  previous: SitePage
}

enum SitePageFieldsEnum {
  path
  component
  internalComponentName
  componentChunkName
  matchPath
  isCreatedByStatefulCreatePages
  context___id
  context___slug
  context____xparams___slug
  pluginCreator___id
  pluginCreator___parent___id
  pluginCreator___parent___parent___id
  pluginCreator___parent___parent___children
  pluginCreator___parent___children
  pluginCreator___parent___children___id
  pluginCreator___parent___children___children
  pluginCreator___parent___internal___content
  pluginCreator___parent___internal___contentDigest
  pluginCreator___parent___internal___description
  pluginCreator___parent___internal___fieldOwners
  pluginCreator___parent___internal___ignoreType
  pluginCreator___parent___internal___mediaType
  pluginCreator___parent___internal___owner
  pluginCreator___parent___internal___type
  pluginCreator___children
  pluginCreator___children___id
  pluginCreator___children___parent___id
  pluginCreator___children___parent___children
  pluginCreator___children___children
  pluginCreator___children___children___id
  pluginCreator___children___children___children
  pluginCreator___children___internal___content
  pluginCreator___children___internal___contentDigest
  pluginCreator___children___internal___description
  pluginCreator___children___internal___fieldOwners
  pluginCreator___children___internal___ignoreType
  pluginCreator___children___internal___mediaType
  pluginCreator___children___internal___owner
  pluginCreator___children___internal___type
  pluginCreator___internal___content
  pluginCreator___internal___contentDigest
  pluginCreator___internal___description
  pluginCreator___internal___fieldOwners
  pluginCreator___internal___ignoreType
  pluginCreator___internal___mediaType
  pluginCreator___internal___owner
  pluginCreator___internal___type
  pluginCreator___resolve
  pluginCreator___name
  pluginCreator___version
  pluginCreator___pluginOptions___plugins
  pluginCreator___pluginOptions___plugins___resolve
  pluginCreator___pluginOptions___plugins___id
  pluginCreator___pluginOptions___plugins___name
  pluginCreator___pluginOptions___plugins___version
  pluginCreator___pluginOptions___plugins___pluginFilepath
  pluginCreator___pluginOptions___allExtensions
  pluginCreator___pluginOptions___isTSX
  pluginCreator___pluginOptions___jsxPragma
  pluginCreator___pluginOptions___apiUrl
  pluginCreator___pluginOptions___contentApiKey
  pluginCreator___pluginOptions___version
  pluginCreator___pluginOptions___outputPath
  pluginCreator___pluginOptions___emitSchema___src___generated___gatsby_introspection_json
  pluginCreator___pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginCreator___pluginOptions___emitPluginDocuments___src___generated___gatsby_plugin_documents_graphql
  pluginCreator___pluginOptions___path
  pluginCreator___pluginOptions___name
  pluginCreator___pluginOptions___short_name
  pluginCreator___pluginOptions___description
  pluginCreator___pluginOptions___homepage_url
  pluginCreator___pluginOptions___start_url
  pluginCreator___pluginOptions___background_color
  pluginCreator___pluginOptions___theme_color
  pluginCreator___pluginOptions___icon
  pluginCreator___pluginOptions___icon_options___purpose
  pluginCreator___pluginOptions___cache_busting_mode
  pluginCreator___pluginOptions___include_favicon
  pluginCreator___pluginOptions___legacy
  pluginCreator___pluginOptions___theme_color_in_head
  pluginCreator___pluginOptions___cacheDigest
  pluginCreator___pluginOptions___trackingId
  pluginCreator___pluginOptions___anonymize
  pluginCreator___pluginOptions___respectDNT
  pluginCreator___pluginOptions___mergeSecurityHeaders
  pluginCreator___pluginOptions___mergeLinkHeaders
  pluginCreator___pluginOptions___mergeCachingHeaders
  pluginCreator___pluginOptions___postCssPlugins
  pluginCreator___pluginOptions___postCssPlugins___postcssPlugin
  pluginCreator___pluginOptions___component
  pluginCreator___pluginOptions___pathCheck
  pluginCreator___nodeAPIs
  pluginCreator___browserAPIs
  pluginCreator___ssrAPIs
  pluginCreator___pluginFilepath
  pluginCreator___packageJson___name
  pluginCreator___packageJson___description
  pluginCreator___packageJson___version
  pluginCreator___packageJson___main
  pluginCreator___packageJson___license
  pluginCreator___packageJson___dependencies
  pluginCreator___packageJson___dependencies___name
  pluginCreator___packageJson___dependencies___version
  pluginCreator___packageJson___devDependencies
  pluginCreator___packageJson___devDependencies___name
  pluginCreator___packageJson___devDependencies___version
  pluginCreator___packageJson___peerDependencies
  pluginCreator___packageJson___peerDependencies___name
  pluginCreator___packageJson___peerDependencies___version
  pluginCreator___packageJson___keywords
  pluginCreatorId
  componentPath
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
}

input SitePageFilterInput {
  path: StringQueryOperatorInput
  component: StringQueryOperatorInput
  internalComponentName: StringQueryOperatorInput
  componentChunkName: StringQueryOperatorInput
  matchPath: StringQueryOperatorInput
  isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
  context: SitePageContextFilterInput
  pluginCreator: SitePluginFilterInput
  pluginCreatorId: StringQueryOperatorInput
  componentPath: StringQueryOperatorInput
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
}

type SitePageGroupConnection {
  totalCount: Int!
  edges: [SitePageEdge!]!
  nodes: [SitePage!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

input SitePageSortInput {
  fields: [SitePageFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SitePlugin implements Node {
  id: ID!
  parent: Node
  children: [Node!]!
  internal: Internal!
  resolve: String
  name: String
  version: String
  pluginOptions: SitePluginPluginOptions
  nodeAPIs: [String]
  browserAPIs: [String]
  ssrAPIs: [String]
  pluginFilepath: String
  packageJson: SitePluginPackageJson
}

type SitePluginConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  distinct(field: SitePluginFieldsEnum!): [String!]!
  group(skip: Int, limit: Int, field: SitePluginFieldsEnum!): [SitePluginGroupConnection!]!
}

type SitePluginEdge {
  next: SitePlugin
  node: SitePlugin!
  previous: SitePlugin
}

enum SitePluginFieldsEnum {
  id
  parent___id
  parent___parent___id
  parent___parent___parent___id
  parent___parent___parent___children
  parent___parent___children
  parent___parent___children___id
  parent___parent___children___children
  parent___parent___internal___content
  parent___parent___internal___contentDigest
  parent___parent___internal___description
  parent___parent___internal___fieldOwners
  parent___parent___internal___ignoreType
  parent___parent___internal___mediaType
  parent___parent___internal___owner
  parent___parent___internal___type
  parent___children
  parent___children___id
  parent___children___parent___id
  parent___children___parent___children
  parent___children___children
  parent___children___children___id
  parent___children___children___children
  parent___children___internal___content
  parent___children___internal___contentDigest
  parent___children___internal___description
  parent___children___internal___fieldOwners
  parent___children___internal___ignoreType
  parent___children___internal___mediaType
  parent___children___internal___owner
  parent___children___internal___type
  parent___internal___content
  parent___internal___contentDigest
  parent___internal___description
  parent___internal___fieldOwners
  parent___internal___ignoreType
  parent___internal___mediaType
  parent___internal___owner
  parent___internal___type
  children
  children___id
  children___parent___id
  children___parent___parent___id
  children___parent___parent___children
  children___parent___children
  children___parent___children___id
  children___parent___children___children
  children___parent___internal___content
  children___parent___internal___contentDigest
  children___parent___internal___description
  children___parent___internal___fieldOwners
  children___parent___internal___ignoreType
  children___parent___internal___mediaType
  children___parent___internal___owner
  children___parent___internal___type
  children___children
  children___children___id
  children___children___parent___id
  children___children___parent___children
  children___children___children
  children___children___children___id
  children___children___children___children
  children___children___internal___content
  children___children___internal___contentDigest
  children___children___internal___description
  children___children___internal___fieldOwners
  children___children___internal___ignoreType
  children___children___internal___mediaType
  children___children___internal___owner
  children___children___internal___type
  children___internal___content
  children___internal___contentDigest
  children___internal___description
  children___internal___fieldOwners
  children___internal___ignoreType
  children___internal___mediaType
  children___internal___owner
  children___internal___type
  internal___content
  internal___contentDigest
  internal___description
  internal___fieldOwners
  internal___ignoreType
  internal___mediaType
  internal___owner
  internal___type
  resolve
  name
  version
  pluginOptions___plugins
  pluginOptions___plugins___resolve
  pluginOptions___plugins___id
  pluginOptions___plugins___name
  pluginOptions___plugins___version
  pluginOptions___plugins___pluginFilepath
  pluginOptions___allExtensions
  pluginOptions___isTSX
  pluginOptions___jsxPragma
  pluginOptions___apiUrl
  pluginOptions___contentApiKey
  pluginOptions___version
  pluginOptions___outputPath
  pluginOptions___emitSchema___src___generated___gatsby_introspection_json
  pluginOptions___emitSchema___src___generated___gatsby_schema_graphql
  pluginOptions___emitPluginDocuments___src___generated___gatsby_plugin_documents_graphql
  pluginOptions___path
  pluginOptions___name
  pluginOptions___short_name
  pluginOptions___description
  pluginOptions___homepage_url
  pluginOptions___start_url
  pluginOptions___background_color
  pluginOptions___theme_color
  pluginOptions___icon
  pluginOptions___icon_options___purpose
  pluginOptions___cache_busting_mode
  pluginOptions___include_favicon
  pluginOptions___legacy
  pluginOptions___theme_color_in_head
  pluginOptions___cacheDigest
  pluginOptions___trackingId
  pluginOptions___anonymize
  pluginOptions___respectDNT
  pluginOptions___mergeSecurityHeaders
  pluginOptions___mergeLinkHeaders
  pluginOptions___mergeCachingHeaders
  pluginOptions___postCssPlugins
  pluginOptions___postCssPlugins___postcssPlugin
  pluginOptions___component
  pluginOptions___pathCheck
  nodeAPIs
  browserAPIs
  ssrAPIs
  pluginFilepath
  packageJson___name
  packageJson___description
  packageJson___version
  packageJson___main
  packageJson___license
  packageJson___dependencies
  packageJson___dependencies___name
  packageJson___dependencies___version
  packageJson___devDependencies
  packageJson___devDependencies___name
  packageJson___devDependencies___version
  packageJson___peerDependencies
  packageJson___peerDependencies___name
  packageJson___peerDependencies___version
  packageJson___keywords
}

input SitePluginFilterInput {
  id: StringQueryOperatorInput
  parent: NodeFilterInput
  children: NodeFilterListInput
  internal: InternalFilterInput
  resolve: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  pluginOptions: SitePluginPluginOptionsFilterInput
  nodeAPIs: StringQueryOperatorInput
  browserAPIs: StringQueryOperatorInput
  ssrAPIs: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
  packageJson: SitePluginPackageJsonFilterInput
}

type SitePluginGroupConnection {
  totalCount: Int!
  edges: [SitePluginEdge!]!
  nodes: [SitePlugin!]!
  pageInfo: PageInfo!
  field: String!
  fieldValue: String
}

type SitePluginPackageJson {
  name: String
  description: String
  version: String
  main: String
  license: String
  dependencies: [SitePluginPackageJsonDependencies]
  devDependencies: [SitePluginPackageJsonDevDependencies]
  peerDependencies: [SitePluginPackageJsonPeerDependencies]
  keywords: [String]
}

type SitePluginPackageJsonDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

type SitePluginPackageJsonDevDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonDevDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
  name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  version: StringQueryOperatorInput
  main: StringQueryOperatorInput
  license: StringQueryOperatorInput
  dependencies: SitePluginPackageJsonDependenciesFilterListInput
  devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
  peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
  keywords: StringQueryOperatorInput
}

type SitePluginPackageJsonPeerDependencies {
  name: String
  version: String
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
  elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

type SitePluginPluginOptions {
  plugins: [SitePluginPluginOptionsPlugins]
  allExtensions: Boolean
  isTSX: Boolean
  jsxPragma: String
  apiUrl: String
  contentApiKey: String
  version: String
  outputPath: String
  emitSchema: SitePluginPluginOptionsEmitSchema
  emitPluginDocuments: SitePluginPluginOptionsEmitPluginDocuments
  path: String
  name: String
  short_name: String
  description: String
  homepage_url: String
  start_url: String
  background_color: String
  theme_color: String
  icon: String
  icon_options: SitePluginPluginOptionsIcon_options
  cache_busting_mode: String
  include_favicon: Boolean
  legacy: Boolean
  theme_color_in_head: Boolean
  cacheDigest: String
  trackingId: String
  anonymize: Boolean
  respectDNT: Boolean
  mergeSecurityHeaders: Boolean
  mergeLinkHeaders: Boolean
  mergeCachingHeaders: Boolean
  postCssPlugins: [SitePluginPluginOptionsPostCssPlugins]
  component: String
  pathCheck: Boolean
}

type SitePluginPluginOptionsEmitPluginDocuments {
  src___generated___gatsby_plugin_documents_graphql: Boolean
}

input SitePluginPluginOptionsEmitPluginDocumentsFilterInput {
  src___generated___gatsby_plugin_documents_graphql: BooleanQueryOperatorInput
}

type SitePluginPluginOptionsEmitSchema {
  src___generated___gatsby_introspection_json: Boolean
  src___generated___gatsby_schema_graphql: Boolean
}

input SitePluginPluginOptionsEmitSchemaFilterInput {
  src___generated___gatsby_introspection_json: BooleanQueryOperatorInput
  src___generated___gatsby_schema_graphql: BooleanQueryOperatorInput
}

input SitePluginPluginOptionsFilterInput {
  plugins: SitePluginPluginOptionsPluginsFilterListInput
  allExtensions: BooleanQueryOperatorInput
  isTSX: BooleanQueryOperatorInput
  jsxPragma: StringQueryOperatorInput
  apiUrl: StringQueryOperatorInput
  contentApiKey: StringQueryOperatorInput
  version: StringQueryOperatorInput
  outputPath: StringQueryOperatorInput
  emitSchema: SitePluginPluginOptionsEmitSchemaFilterInput
  emitPluginDocuments: SitePluginPluginOptionsEmitPluginDocumentsFilterInput
  path: StringQueryOperatorInput
  name: StringQueryOperatorInput
  short_name: StringQueryOperatorInput
  description: StringQueryOperatorInput
  homepage_url: StringQueryOperatorInput
  start_url: StringQueryOperatorInput
  background_color: StringQueryOperatorInput
  theme_color: StringQueryOperatorInput
  icon: StringQueryOperatorInput
  icon_options: SitePluginPluginOptionsIcon_optionsFilterInput
  cache_busting_mode: StringQueryOperatorInput
  include_favicon: BooleanQueryOperatorInput
  legacy: BooleanQueryOperatorInput
  theme_color_in_head: BooleanQueryOperatorInput
  cacheDigest: StringQueryOperatorInput
  trackingId: StringQueryOperatorInput
  anonymize: BooleanQueryOperatorInput
  respectDNT: BooleanQueryOperatorInput
  mergeSecurityHeaders: BooleanQueryOperatorInput
  mergeLinkHeaders: BooleanQueryOperatorInput
  mergeCachingHeaders: BooleanQueryOperatorInput
  postCssPlugins: SitePluginPluginOptionsPostCssPluginsFilterListInput
  component: StringQueryOperatorInput
  pathCheck: BooleanQueryOperatorInput
}

type SitePluginPluginOptionsIcon_options {
  purpose: String
}

input SitePluginPluginOptionsIcon_optionsFilterInput {
  purpose: StringQueryOperatorInput
}

type SitePluginPluginOptionsPlugins {
  resolve: String
  id: String
  name: String
  version: String
  pluginFilepath: String
}

input SitePluginPluginOptionsPluginsFilterInput {
  resolve: StringQueryOperatorInput
  id: StringQueryOperatorInput
  name: StringQueryOperatorInput
  version: StringQueryOperatorInput
  pluginFilepath: StringQueryOperatorInput
}

input SitePluginPluginOptionsPluginsFilterListInput {
  elemMatch: SitePluginPluginOptionsPluginsFilterInput
}

type SitePluginPluginOptionsPostCssPlugins {
  postcssPlugin: String
}

input SitePluginPluginOptionsPostCssPluginsFilterInput {
  postcssPlugin: StringQueryOperatorInput
}

input SitePluginPluginOptionsPostCssPluginsFilterListInput {
  elemMatch: SitePluginPluginOptionsPostCssPluginsFilterInput
}

input SitePluginSortInput {
  fields: [SitePluginFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

type SiteSiteMetadata {
  title: String
  description: String
  titleShort: String
  pathPrefix: String
  siteUrl: String
  buildContext: String
  version: String
  social: SiteSiteMetadataSocial
  language: String
}

input SiteSiteMetadataFilterInput {
  title: StringQueryOperatorInput
  description: StringQueryOperatorInput
  titleShort: StringQueryOperatorInput
  pathPrefix: StringQueryOperatorInput
  siteUrl: StringQueryOperatorInput
  buildContext: StringQueryOperatorInput
  version: StringQueryOperatorInput
  social: SiteSiteMetadataSocialFilterInput
  language: StringQueryOperatorInput
}

type SiteSiteMetadataSocial {
  twitter: SiteSiteMetadataSocialTwitter
  facebook: SiteSiteMetadataSocialFacebook
  instagram: SiteSiteMetadataSocialInstagram
}

type SiteSiteMetadataSocialFacebook {
  username: String
}

input SiteSiteMetadataSocialFacebookFilterInput {
  username: StringQueryOperatorInput
}

input SiteSiteMetadataSocialFilterInput {
  twitter: SiteSiteMetadataSocialTwitterFilterInput
  facebook: SiteSiteMetadataSocialFacebookFilterInput
  instagram: SiteSiteMetadataSocialInstagramFilterInput
}

type SiteSiteMetadataSocialInstagram {
  username: String
}

input SiteSiteMetadataSocialInstagramFilterInput {
  username: StringQueryOperatorInput
}

type SiteSiteMetadataSocialTwitter {
  username: String
}

input SiteSiteMetadataSocialTwitterFilterInput {
  username: StringQueryOperatorInput
}

input SiteSortInput {
  fields: [SiteFieldsEnum]
  order: [SortOrderEnum] = [ASC]
}

enum SortOrderEnum {
  ASC
  DESC
}

input StringQueryOperatorInput {
  eq: String
  ne: String
  in: [String]
  nin: [String]
  regex: String
  glob: String
}

input TransformOptions {
  grayscale: Boolean = false
  duotone: DuotoneGradient
  rotate: Int = 0
  trim: Float = 0
  cropFocus: ImageCropFocus = ATTENTION
  fit: ImageFit = COVER
}

input WebPOptions {
  quality: Int
}
